# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-06 20:29
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractChecker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AbstractStatementGenerator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_score', models.PositiveIntegerField(help_text='Maximum score for this task')),
            ],
        ),
        migrations.CreateModel(
            name='RegExpChecker',
            fields=[
                ('abstractchecker_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tasks.AbstractChecker')),
                ('pattern', models.TextField(help_text="Regular expression for matching, don't need ^ and $")),
                ('flag_multiline', models.BooleanField(default=False, help_text="Python's re.MULTILINE (re.M)")),
                ('flag_dotall', models.BooleanField(default=False, help_text="Python's re.DOTALL (re.S)")),
                ('flag_verbose', models.BooleanField(default=False, help_text="Python's re.VERBOSE (re.X)")),
            ],
            options={
                'abstract': False,
            },
            bases=('tasks.abstractchecker',),
        ),
        migrations.CreateModel(
            name='TextChecker',
            fields=[
                ('abstractchecker_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tasks.AbstractChecker')),
                ('answer', models.TextField(help_text='Correct answer')),
                ('case_sensitive', models.BooleanField(default=False, help_text='Is answer case sensitive')),
            ],
            options={
                'abstract': False,
            },
            bases=('tasks.abstractchecker',),
        ),
        migrations.CreateModel(
            name='TextStatementGenerator',
            fields=[
                ('abstractstatementgenerator_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tasks.AbstractStatementGenerator')),
                ('template', models.TextField(help_text='Markdown with substitutes')),
            ],
            options={
                'abstract': False,
            },
            bases=('tasks.abstractstatementgenerator',),
        ),
        migrations.AddField(
            model_name='task',
            name='checker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.AbstractChecker'),
        ),
        migrations.AddField(
            model_name='task',
            name='statement_generator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='tasks.AbstractStatementGenerator'),
        ),
        migrations.AddField(
            model_name='abstractstatementgenerator',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_tasks.abstractstatementgenerator_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='abstractchecker',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_tasks.abstractchecker_set+', to='contenttypes.ContentType'),
        ),
    ]
